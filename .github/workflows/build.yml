name: Genicons CI build

on:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
        poetry-version: [1.1.12]
        
    runs-on: ${{ matrix.os }}
    
    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: sample_db
          MYSQL_USER: user
          MYSQL_PASSWORD: password       # pragma: allowlist secret
          MYSQL_ROOT_PASSWORD: password  # pragma: allowlist secret
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:

      ## This DevSecOps pipeline exclude pre-commit hooking
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.1.3
        with:
          poetry-version: ${{ matrix.poetry-version }}

      ## Unittest
      - name: Pytest
        run: |
          cd fastapi/
          poetry install --no-interaction
          poetry run pytest --rootdir=./app/test/ -c ./app/test/pytest.ini

  sast:
    needs: build
    runs-on: ubuntu-latest

    steps:

      - name: Check out repository code
        uses: actions/checkout@v2

      ## SAST (and dependency, infla-code, container-image)
      - name: Build an image from Dockerfile
        run: |
          cd fastapi/
          docker build -t tribol/genicons-api:${{ github.sha }} .

      - name: Run Trivy container scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'tribol/genicons-api:${{ github.sha }}'
          format: 'sarif'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          output: 'trivy-container-scan-results.sarif'

      - name: Run Trivy repo-contents scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'
          output: 'trivy-repo-scan-results.sarif'

      - name: Run Trivy config scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      - name: Bundle Trivy analysis report
        if: always()
        run: |
          mkdir sarif && find . -name '*.sarif' | xargs -I{} cp "{}" ./sarif/

      - name: Upload Trivy container scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: sarif
